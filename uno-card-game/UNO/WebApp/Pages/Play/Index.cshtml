@page
@using Domain
@model WebApp.Pages.Play.Index

<!DOCTYPE html>
<html lang="en">
<head>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
        <title>Uno</title>
</head>
<body>

    @{
        ViewData["Title"] = "Uno";
        var pageplayer = Model.Engine.State.Players.Find(i => i.Id == Model.PlayerId);
        var chosencard = 0;
    }

    <h1>Playing as @pageplayer?.NickName</h1>

<div class="info-table">
    @if (Model.Engine.State.Winner != null)
    {
        <div class="modal">
            <p class="message">Game winner: @(Model.Engine.State.Winner)!</p>
            <div class="options">
                <button class="btn" onclick="window.location = '../Index'">Back to menu!</button>
            </div>
        </div>
    }
    
    else
    {
        <h3>Active player: @(Model.Engine.GetActivePlayer().NickName)</h3>
        if (Model.Engine.GetActivePlayer().Id != Model.PlayerId)
        {
            <h4>Wait for your turn, @pageplayer?.NickName</h4>
            <h4>Checking if its your turn in: <span id="reload-label">-</span></h4>                                              
        }
        else
        {
            <h4>Make your move!</h4>
            if (pageplayer!.CanPlay)
            {
                <h4> can play</h4>
            }
        }
    }
    
    <div class="action-log">
        <h3>Action Log</h3>
        <ul>
            @foreach (var logEntry in Model.ActionLog)
            {
                <li>@logEntry</li>
            }
        </ul>
    </div>
</div>


<form method="post">
    <input type="hidden" name="GameId" value="@Model.GameId" />
    <input type="hidden" name="PlayerId" value="@Model.PlayerId" />
    <div class="game-table">
        <div class="game-container">
            @foreach (var player in Model.Engine.State.Players)
            {
                
                if (player != pageplayer)
                {
                    <div class="player-hand">
                        <button class="@GetButtonStatus("Catch")" type="submit" name="catch" value="@Model.Engine.State.Players.IndexOf(player)">Catch player</button>
                        <h6>@player.NickName</h6>
                        <div class="card"><span>@player.PlayerHand.Count</span></div>
                    </div>
                }
            }
            
            <div class="table-hand">
                <div class="card"><span>@Model.Engine.State.DeckOfPlayedCards.Last().ToString()</span></div>
                <button class="card" type="submit" name="action" value="draw"><span>Deck (click to draw)</span></button>
            </div>

            @if (Model.Engine.GetActivePlayer().Id == Model.PlayerId)
            {
                if (Model.Engine.GetActivePlayer().DrawDebt > 0)
                {
                    Model.Engine.DrawACard(Model.Engine.GetActivePlayer(), Model.Engine.GetActivePlayer().DrawDebt);
                }
                <h4>@(Model.Engine.GetActivePlayer().NickName)'s hand</h4>
                @foreach (var card in Model.Engine.GetActivePlayer().PlayerHand)
                {
                    if (card.CardColor == ECardColor.Black)
                    {
                        {
                            chosencard = Model.Engine.GetActivePlayer().PlayerHand.IndexOf(card);
                        }

                        <button class="card" type="button" onclick="showDiv(@Model.Engine.GetActivePlayer().PlayerHand.IndexOf(card))">
                            <span>@card.ToString()</span>
                            <span>@card.ToString()</span>
                        </button> 
                    }
                    else
                    {
                        <button class="card" type="submit" name="CardNr" value="@Model.Engine.GetActivePlayer().PlayerHand.IndexOf(card)">
                            <span>@card.ToString()</span>
                        </button>
                    }
                }
            }
            
        </div>
    </div>
    
    <div class="player-actions">
        <button class="@GetButtonStatus("End turn")" type="submit" name="action" value="end">End Turn</button>
        <button class="@GetButtonStatus("Uno")" type="submit" name="action" value="uno">Shout Uno</button>
    </div>
</form>


<div class="popup" id="popup">
    <div class="content" id="Popup">
        <form method="post">
            <input type="hidden" name="GameId" value="@Model.GameId" />
            <input type="hidden" name="PlayerId" value="@Model.PlayerId" />
            
            <button class="card" id="color0" style="background-color: yellow" type="submit" name="CardNr" value=""></button>
            <button class="card" id="color1" style="background-color: blue" type="submit" name="CardNr" value=""></button>
            <button class="card" id="color2" style="background-color: red" type="submit" name="CardNr" value=""></button>
            <button class="card" id="color3" style="background-color: green" type="submit" name="CardNr" value=""></button>
        </form>
    </div>
</div>

<script>
function showDiv(nr) {
  document.getElementById("popup").style.display = "block";
  document.getElementById("color0").value = "0-" + nr;
  document.getElementById("color1").value = "1-" + nr;
  document.getElementById("color2").value = "2-" + nr;
  document.getElementById("color3").value = "3-" + nr;
}

let timerValue = 5;
let timerLabel = document.querySelector("#reload-label");

setInterval(() => {
    timerValue--;
    timerLabel.innerHTML = timerValue.toString();
    if (timerValue <= 0) {
        window.location.replace(window.location.href);
        }
}, 1000);

 
</script>
@functions
{
    
    string GetButtonStatus(string action)
    {
        var pageplayer = Model.Engine.State.Players.Find(i => i.Id == Model.PlayerId);
        if (action == "End turn")
        {
            if (!pageplayer!.CanEnd)
            {
                return "action-deactivated";
            }
            return "action-active";
        }
        if (action == "Uno")
        {
            if (pageplayer!.PlayerHand.Count != 1 || pageplayer!.Uno)
            {
                return "action-deactivated";
            }
            return "action-active";
        }
        if (action == "Catch")
        {
            
            return "action-active";
        }
        
        return "";
    }
    
}

</body>
</html>
