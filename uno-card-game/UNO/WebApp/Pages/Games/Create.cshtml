@page
@model WebApp.Pages.Games.CreateModel

@{
    ViewData["Title"] = "New game";
}

<h1>New game</h1>

<h4>Options</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            <div class="form-group">
                <label asp-for="Humans" class="control-label">Number of Human Players:</label>
                <input asp-for="Humans" id="Humans" class="form-control" />
                <span asp-validation-for="Humans" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Ais" class="control-label">Number of AI Players:</label>
                <input asp-for="Ais" id="Ais" class="form-control" />
                <span asp-validation-for="Ais" class="text-danger"></span>
            </div>
            
            <div class="form-group">
                <label asp-for="Gamespeed" class="control-label">Gamespeed in ms:</label>
                <input asp-for="Gamespeed" id="Gamespeed" class="form-control" />
                <span asp-validation-for="Gamespeed" class="text-danger"></span>
            </div>
            
            
            <div class="form-group" id="aiSpeedField">
                <label asp-for="AiSpeed" class="control-label">Ai speed in ms:</label>
                <input asp-for="AiSpeed" id="AiSpeed" class="form-control" />
                <span asp-validation-for="AiSpeed" class="text-danger"></span>
            </div>
            
            <div class="Players-error" id="playersError" class="text-danger"></div>
            <div class="form-group">
                <input id="createButton" type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        function toggleAiSpeedVisibility() {
            var aisInput = document.getElementById('Ais');
            var aiSpeedField = document.getElementById('aiSpeedField');
            aiSpeedField.style.display = aisInput.value > 0 ? 'block' : 'none';
        }

        document.getElementById('Ais').addEventListener('input', toggleAiSpeedVisibility);
        toggleAiSpeedVisibility();

        function updateCreateButtonState() {
            var humansInput = document.getElementById('Humans');
            var aisInput = document.getElementById('Ais');
            var aiSpeedInput = document.getElementById('AiSpeed');
            var gamespeedInput = document.getElementById('Gamespeed');
            var createButton = document.getElementById('createButton');
            var playersError = document.getElementById('playersError');
            var isHumansValid = isInRange(humansInput.value, 0, 7);
            var isAisValid = isInRange(aisInput.value, 0, 7);
            var isAiSpeedValid = isInRange(aiSpeedInput.value, 0, 9000); // Adjust as needed
            var isGamespeedValid = isInRange(gamespeedInput.value, 0, 9000); // Adjust as needed
            var combinedPlayers = parseInt(humansInput.value) + parseInt(aisInput.value);
            var isTotalPlayersValid = combinedPlayers >= 2 && combinedPlayers <= 7;

            playersError.textContent = isTotalPlayersValid ? '' : 'The total number of players must be between 2 and 7.';
            createButton.disabled = !(isHumansValid && isAisValid && isAiSpeedValid && isGamespeedValid && isTotalPlayersValid);
        }
        document.getElementById('Humans').addEventListener('input', updateCreateButtonState);
        document.getElementById('Ais').addEventListener('input', updateCreateButtonState);
        document.getElementById('AiSpeed').addEventListener('input', updateCreateButtonState);
        document.getElementById('Gamespeed').addEventListener('input', updateCreateButtonState);

        document.addEventListener('DOMContentLoaded', updateCreateButtonState);

        function isInRange(value, min, max) {
            var numericValue = parseFloat(value);
            return !isNaN(numericValue) && numericValue >= min && numericValue <= max;
        }
    </script>
}


